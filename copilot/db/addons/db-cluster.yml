Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: The name of the service, job, or workflow being deployed.
  # Customize your Aurora Serverless cluster by setting the default value of the following parameters.
  dbclusterDBName:
    Type: String
    Description: The name of the initial database to be created in the Aurora Serverless v2 cluster.
    Default: sleepywood
    # Cannot have special characters
    # Naming constraints: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints

Mappings:
  dbclusterEnvScalingConfigurationMap:
    test:
      "DBMinCapacity": 0.5 # AllowedValues: from 0.5 through 128
      "DBMaxCapacity": 8   # AllowedValues: from 0.5 through 128

    All:
      "DBMinCapacity": 0.5 # AllowedValues: from 0.5 through 128
      "DBMaxCapacity": 8   # AllowedValues: from 0.5 through 128

Resources:
  dbclusterDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      # DBSubnetGroupDescription: Group of Copilot private subnets for Aurora Serverless v2 cluster.
      # SubnetIds:
      #   !Split [',', { 'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets' }]
      # public access
      DBSubnetGroupDescription: Group of Copilot public subnets for Aurora Serverless v2 cluster.
      SubnetIds:
        !Split [',', { 'Fn::ImportValue': !Sub '${App}-${Env}-PublicSubnets' }]
  dbclusterSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your workload to access the Aurora Serverless v2 cluster dbcluster'
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'The Security Group for ${Name} to access Aurora Serverless v2 cluster dbcluster.'
      VpcId:
        Fn::ImportValue:
          !Sub '${App}-${Env}-VpcId'
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-${Name}-Aurora'
  dbclusterDBClusterSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your Aurora Serverless v2 cluster dbcluster'
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: The Security Group for the Aurora Serverless v2 cluster.
      SecurityGroupIngress:
        - ToPort: 3306
          FromPort: 3306
          IpProtocol: tcp
          Description: !Sub 'From the Aurora Security Group of the workload ${Name}.'
          SourceSecurityGroupId: !Ref dbclusterSecurityGroup
        # environment access
        - ToPort: 3306
          FromPort: 3306
          IpProtocol: tcp
          Description: !Sub 'From the Environment Security Group of the workload ${Name}.'
          SourceSecurityGroupId:
            Fn::ImportValue:
              !Sub '${App}-${Env}-EnvironmentSecurityGroup'
        # public access
        - ToPort: 3306
          FromPort: 3306
          IpProtocol: tcp
          Description: !Sub 'Public access to the workload ${Name}.'
          CidrIp: 0.0.0.0/0
        - ToPort: 3306
          FromPort: 3306
          IpProtocol: tcp
          Description: !Sub 'Public access to the workload ${Name}.'
          CidrIpv6: ::/0
      VpcId:
        Fn::ImportValue:
          !Sub '${App}-${Env}-VpcId'
  dbclusterAuroraSecret:
    Metadata:
      'aws:copilot:description': 'A Secrets Manager secret to store your DB credentials'
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Aurora main user secret for ${AWS::StackName}
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
        ExcludePunctuation: true
        IncludeSpace: false
        PasswordLength: 16
  dbclusterDBClusterParameterGroup:
    Metadata:
      'aws:copilot:description': 'A DB parameter group for engine configuration values'
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: !Ref 'AWS::StackName'
      Family: 'aurora-mysql8.0'
      Parameters:
        character_set_client: 'utf8'
  dbclusterDBCluster:
    Metadata:
      'aws:copilot:description': 'The dbcluster Aurora Serverless v2 database cluster'
    Type: 'AWS::RDS::DBCluster'
    Properties:
      MasterUsername:
        !Join [ "",  [ '{{resolve:secretsmanager:', !Ref dbclusterAuroraSecret, ":SecretString:username}}" ]]
      MasterUserPassword:
        !Join [ "",  [ '{{resolve:secretsmanager:', !Ref dbclusterAuroraSecret, ":SecretString:password}}" ]]
      DatabaseName: !Ref dbclusterDBName
      Engine: 'aurora-mysql'
      EngineVersion: '8.0.mysql_aurora.3.02.1'
      DBClusterParameterGroupName: !Ref dbclusterDBClusterParameterGroup
      DBSubnetGroupName: !Ref dbclusterDBSubnetGroup
      Port: 3306
      VpcSecurityGroupIds:
        - !Ref dbclusterDBClusterSecurityGroup
      ServerlessV2ScalingConfiguration:
        # Replace "All" below with "!Ref Env" to set different autoscaling limits per environment.
        MinCapacity: !FindInMap [dbclusterEnvScalingConfigurationMap, All, DBMinCapacity]
        MaxCapacity: !FindInMap [dbclusterEnvScalingConfigurationMap, All, DBMaxCapacity]
  dbclusterDBWriterInstance:
    Metadata:
      'aws:copilot:description': 'The dbcluster Aurora Serverless v2 writer instance'
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBClusterIdentifier: !Ref dbclusterDBCluster
      DBInstanceClass: db.serverless
      Engine: 'aurora-mysql'
      PromotionTier: 1
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region
      # public access
      PubliclyAccessible: true
  dbclusterSecretAuroraClusterAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref dbclusterAuroraSecret
      TargetId: !Ref dbclusterDBCluster
      TargetType: AWS::RDS::DBCluster

Outputs:
  dbclusterSecret: # injected as DBCLUSTER_SECRET environment variable by Copilot.
    Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
    Value: !Ref dbclusterAuroraSecret
    Export:
      Name: !Sub ${App}-${Env}-DBSecret
  dbclusterSecurityGroup:
    Description: "The security group to attach to the workload."
    Value: !Ref dbclusterSecurityGroup
