# The manifest for the "api" service.
# Read the full specification for the "Backend Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/backend-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: api
type: Backend Service

# Your service does not allow any traffic.

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/backend-service/#image-build
  build: Dockerfile
  port: 3000

cpu: 1024      # Number of CPU units for the task.
memory: 2048   # Amount of memory in MiB used by the task.
platform: linux/arm64  # See https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#platform
count:         # Number of tasks that should be running in your service.
  range: 2-8
  cpu_percentage: 70
  memory_percentage: 80

exec: true     # Enable running commands in your container.

# Optional fields for more advanced use-cases.
#
variables: # Pass environment variables as key value pairs.
  # Redis
  # REDIS_HOST: redis.$COPILOT_SERVICE_DISCOVERY_ENDPOINT
  REDIS_HOST: redis.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.local
  REDIS_PORT: 6379
  # Server Port
  PORT: 3000
  # Throttling Options
  THROTTLE_TTL: 60
  THROTTLE_LIMIT: 100
  # timezone / locale
  TZ: Asia/Seoul
  locale: ko_KR
#  LOG_LEVEL: info

secrets: # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
  SECRET: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/SECRET
  SALT: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/SALT
  WEATHER_API_KEY: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/WEATHER_API_KEY
#  GITHUB_TOKEN: GITHUB_TOKEN  # The key is the name of the environment variable, the value is the name of the SSM parameter.

# You can override any of the values defined above by environment.
#environments:
#  test:
#    count: 2               # Number of tasks to run for the "test" environment.
#    deployment:            # The deployment strategy for the "test" environment.
#       rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.
